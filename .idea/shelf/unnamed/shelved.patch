Index: app/src/main/java/com/isysnext/feedapp/adapter/DrawerAdpter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp.adapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport android.widget.ImageView;\nimport com.isysnext.feedapp.R;\nimport com.isysnext.feedapp.dto.DrawerDataModel;\nimport java.util.ArrayList;\n\n/**\n * Created by Anuved on 28/08/18.\n */\npublic class DrawerAdpter extends BaseAdapter {\n    //Declaration of variables\n    private ArrayList<DrawerDataModel> arrayList;\n    private Context context;\n\n    //Constructor\n    public DrawerAdpter(Context context, ArrayList<DrawerDataModel> arrayList) {\n        this.context = context;\n        this.arrayList = arrayList;\n    }\n\n    @Override\n    public int getCount() {\n        return arrayList.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return position;\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n\n        View v = convertView;\n        LayoutInflater inflater = LayoutInflater.from(context);\n        v = inflater.inflate(R.layout.tray_list_item,null);\n        ImageView drawr_list_icon = (ImageView) v.findViewById(R.id.drawr_list_icon);\n        drawr_list_icon.setImageResource(arrayList.get(position).getDrawerImage());\n\n        return v;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/adapter/DrawerAdpter.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/adapter/DrawerAdpter.java	(date 1535703957809)
@@ -6,6 +6,8 @@
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
 import android.widget.ImageView;
+import android.widget.TextView;
+
 import com.isysnext.feedapp.R;
 import com.isysnext.feedapp.dto.DrawerDataModel;
 import java.util.ArrayList;
@@ -17,6 +19,7 @@
     //Declaration of variables
     private ArrayList<DrawerDataModel> arrayList;
     private Context context;
+    public static View viewMenu;
 
     //Constructor
     public DrawerAdpter(Context context, ArrayList<DrawerDataModel> arrayList) {
@@ -45,8 +48,12 @@
         View v = convertView;
         LayoutInflater inflater = LayoutInflater.from(context);
         v = inflater.inflate(R.layout.tray_list_item,null);
-        ImageView drawr_list_icon = (ImageView) v.findViewById(R.id.drawr_list_icon);
-        drawr_list_icon.setImageResource(arrayList.get(position).getDrawerImage());
+        ImageView imgMenu = (ImageView) v.findViewById(R.id.img_menu);
+        imgMenu.setImageResource(arrayList.get(position).getDrawerImage());
+
+        TextView tvMenu = (TextView) v.findViewById(R.id.tv_menu);
+        tvMenu.setText(arrayList.get(position).getDrawerText());
+
 
         return v;
     }
Index: app/src/main/java/com/isysnext/feedapp/adapter/RetrospectiveAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp.adapter;\n\nimport android.app.ProgressDialog;\nimport android.content.Context;\nimport android.graphics.drawable.Drawable;\nimport android.os.AsyncTask;\nimport android.os.Environment;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport android.widget.ImageView;\nimport android.widget.Toast;\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.RequestOptions;\nimport com.isysnext.feedapp.Home;\nimport com.isysnext.feedapp.R;\nimport com.isysnext.feedapp.dto.TabDTO;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.ArrayList;\n\n/**\n * Created by Anuved on 29/08/18.\n */\npublic class RetrospectiveAdapter extends BaseAdapter{\n    //Declaration of variables\n    ArrayList<TabDTO.Wallpaper> listWallpaper;\n    public Context mContext;\n    private ProgressDialog mProgressDialog;\n    private AsyncTask mMyTask;\n    String imageURL;\n\n\n    public RetrospectiveAdapter(Context mContext, ArrayList<TabDTO.Wallpaper> listWallpaper) {\n        this.listWallpaper = listWallpaper;\n        this.mContext = mContext;\n    }\n\n    @Override\n    public int getCount() {\n        return listWallpaper.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return position;\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(final int position, View convertView, ViewGroup parent) {\n        View v = convertView;\n        LayoutInflater inflater = LayoutInflater.from(mContext);\n\n        v = inflater.inflate(R.layout.restropective_list_adapter_view, null);\n        ImageView imageWallpaper = (ImageView) v.findViewById(R.id.image_wallpaper);\n        ImageView imageSave = (ImageView) v.findViewById(R.id.image_save);\n        imageSave.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Toast.makeText(mContext, \"Clicked\", Toast.LENGTH_SHORT).show();\n                 imageURL = listWallpaper.get(position).getUrl();\n                        MyAsyncTask asyncTask = new MyAsyncTask();\n                        asyncTask.execute();\n\n\n            }\n        });\n        if (listWallpaper.get(position).getCategory().equals(Home.sStrCategoryCheck)) {\n            if (listWallpaper.get(position).getUrl() != null || !listWallpaper.get(position).getUrl().equals(\"\")) {\n                Glide.with(mContext).load(listWallpaper.get(position).getUrl())\n                        .apply(RequestOptions.placeholderOf(Drawable.createFromPath(listWallpaper.get(position).getThumbUrl()))).into(imageWallpaper);\n                Log.e(\"Image--------\", listWallpaper.get(position).getUrl());\n            } else {\n                Glide.with(mContext).load(listWallpaper.get(position).getThumbUrl())\n                        .apply(RequestOptions.placeholderOf(Drawable.createFromPath(listWallpaper.get(position).getThumbUrl()))).into(imageWallpaper);\n            }\n        }\n\n\n        return v;\n\n    }\n\n    class MyAsyncTask extends AsyncTask<Void, Void, Void> {\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n        }\n\n        @Override\n        protected Void doInBackground(Void... voids) {\n            try {\n                URL url = new URL(imageURL);\n                //create the new connection\n                HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();\n                //set up some things on the connection\n                urlConnection.setRequestMethod(\"GET\");\n                urlConnection.setDoOutput(true);\n                //and connect!\n                urlConnection.connect();\n                //set the path where we want to save the file in this case, going to save it on the root directory of the sd card.\n                File SDCardRoot = Environment.getExternalStorageDirectory();\n                //create a new file, specifying the path, and the filename which we want to save the file as.\n                File file = new File(SDCardRoot,\"image.jpg\");\n                //this will be used to write the downloaded data into the file we created\n                FileOutputStream fileOutput = new FileOutputStream(file);\n                //this will be used in reading the data from the internet\n                InputStream inputStream = urlConnection.getInputStream();\n                //this is the total size of the file\n                int totalSize = urlConnection.getContentLength();\n                //variable to store total downloaded bytes\n                int downloadedSize = 0;\n                byte[] buffer = new byte[1024];\n                int bufferLength = 0; //used to store a temporary size of the buffer\n                //now, read through the input buffer and write the contents to the file\n                while ( (bufferLength = inputStream.read(buffer)) > 0 ) {\n                    //add the data in the buffer to the file in the file output stream (the file on the sd card\n                    fileOutput.write(buffer, 0, bufferLength);\n                    //add up the size so we know how much is downloaded\n                    downloadedSize += bufferLength;\n                    //this is where you would do something to report the prgress, like this maybe\n                    //updateProgress(downloadedSize, totalSize);\n                }\n            }\n            catch (Exception e){\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(Void aVoid) {\n            super.onPostExecute(aVoid);\n            Toast.makeText(mContext,\"Image Downloaded to sd card\",Toast.LENGTH_SHORT).show();\n        }\n    }\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/adapter/RetrospectiveAdapter.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/adapter/RetrospectiveAdapter.java	(date 1535724335383)
@@ -2,7 +2,11 @@
 
 import android.app.ProgressDialog;
 import android.content.Context;
+import android.content.ContextWrapper;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.graphics.drawable.Drawable;
+import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Environment;
 import android.util.Log;
@@ -17,28 +21,40 @@
 import com.isysnext.feedapp.Home;
 import com.isysnext.feedapp.R;
 import com.isysnext.feedapp.dto.TabDTO;
+import com.isysnext.feedapp.utility.OnItemClickListener;
+
+import java.io.BufferedInputStream;
+import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.FileOutputStream;
+import java.io.IOException;
 import java.io.InputStream;
+import java.io.OutputStream;
 import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.ArrayList;
 
+import static android.content.Context.MODE_PRIVATE;
+
 /**
  * Created by Anuved on 29/08/18.
  */
-public class RetrospectiveAdapter extends BaseAdapter{
+public class RetrospectiveAdapter extends BaseAdapter {
     //Declaration of variables
     ArrayList<TabDTO.Wallpaper> listWallpaper;
     public Context mContext;
     private ProgressDialog mProgressDialog;
     private AsyncTask mMyTask;
     String imageURL;
+    private OnItemClickListener.OnItemClickCallback onItemClickCallback;
 
 
-    public RetrospectiveAdapter(Context mContext, ArrayList<TabDTO.Wallpaper> listWallpaper) {
+
+    public RetrospectiveAdapter(Context mContext, ArrayList<TabDTO.Wallpaper> listWallpaper, OnItemClickListener.OnItemClickCallback onItemClickCallback) {
         this.listWallpaper = listWallpaper;
         this.mContext = mContext;
+        this.onItemClickCallback = onItemClickCallback;
     }
 
     @Override
@@ -63,18 +79,8 @@
 
         v = inflater.inflate(R.layout.restropective_list_adapter_view, null);
         ImageView imageWallpaper = (ImageView) v.findViewById(R.id.image_wallpaper);
-        ImageView imageSave = (ImageView) v.findViewById(R.id.image_save);
-        imageSave.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Toast.makeText(mContext, "Clicked", Toast.LENGTH_SHORT).show();
-                 imageURL = listWallpaper.get(position).getUrl();
-                        MyAsyncTask asyncTask = new MyAsyncTask();
-                        asyncTask.execute();
+       // ImageView imageSave = (ImageView) v.findViewById(R.id.image_save);
 
-
-            }
-        });
         if (listWallpaper.get(position).getCategory().equals(Home.sStrCategoryCheck)) {
             if (listWallpaper.get(position).getUrl() != null || !listWallpaper.get(position).getUrl().equals("")) {
                 Glide.with(mContext).load(listWallpaper.get(position).getUrl())
@@ -85,64 +91,108 @@
                         .apply(RequestOptions.placeholderOf(Drawable.createFromPath(listWallpaper.get(position).getThumbUrl()))).into(imageWallpaper);
             }
         }
+        imageWallpaper.setOnClickListener(new OnItemClickListener(position, onItemClickCallback));
 
 
         return v;
 
     }
 
-    class MyAsyncTask extends AsyncTask<Void, Void, Void> {
+
+    // DownloadImage AsyncTask
+  private class DownloadImage extends AsyncTask<String, Void, Bitmap> {
 
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
+           /* // Create a progressdialog
+            mProgressDialog = new ProgressDialog(mContext);
+            // Set progressdialog title
+            mProgressDialog.setTitle("Download Image Tutorial");
+            // Set progressdialog message
+            mProgressDialog.setMessage("Loading...");
+            mProgressDialog.setIndeterminate(false);
+            // Show progressdialog
+            mProgressDialog.show();*/
+        }
+
+        @Override
+        protected Bitmap doInBackground(String... URL) {
+
+            String imageURL = URL[0];
+
+            Bitmap bitmap = null;
+            try {
+                // Download Image from URL
+                InputStream input = new java.net.URL(imageURL).openStream();
+                // Decode Bitmap
+                bitmap = BitmapFactory.decodeStream(input);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+            return bitmap;
         }
 
         @Override
-        protected Void doInBackground(Void... voids) {
+        protected void onPostExecute(Bitmap result) {
+            // Set the bitmap into ImageView
+
+            // Close progressdialog
+            // mProgressDialog.dismiss();
+        }
+
+
+        // Custom method to convert string to url
+        protected URL stringToURL(String urlString) {
             try {
-                URL url = new URL(imageURL);
-                //create the new connection
-                HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
-                //set up some things on the connection
-                urlConnection.setRequestMethod("GET");
-                urlConnection.setDoOutput(true);
-                //and connect!
-                urlConnection.connect();
-                //set the path where we want to save the file in this case, going to save it on the root directory of the sd card.
-                File SDCardRoot = Environment.getExternalStorageDirectory();
-                //create a new file, specifying the path, and the filename which we want to save the file as.
-                File file = new File(SDCardRoot,"image.jpg");
-                //this will be used to write the downloaded data into the file we created
-                FileOutputStream fileOutput = new FileOutputStream(file);
-                //this will be used in reading the data from the internet
-                InputStream inputStream = urlConnection.getInputStream();
-                //this is the total size of the file
-                int totalSize = urlConnection.getContentLength();
-                //variable to store total downloaded bytes
-                int downloadedSize = 0;
-                byte[] buffer = new byte[1024];
-                int bufferLength = 0; //used to store a temporary size of the buffer
-                //now, read through the input buffer and write the contents to the file
-                while ( (bufferLength = inputStream.read(buffer)) > 0 ) {
-                    //add the data in the buffer to the file in the file output stream (the file on the sd card
-                    fileOutput.write(buffer, 0, bufferLength);
-                    //add up the size so we know how much is downloaded
-                    downloadedSize += bufferLength;
-                    //this is where you would do something to report the prgress, like this maybe
-                    //updateProgress(downloadedSize, totalSize);
-                }
-            }
-            catch (Exception e){
+                URL url = new URL(urlString);
+                return url;
+            } catch (MalformedURLException e) {
                 e.printStackTrace();
             }
             return null;
         }
 
-        @Override
-        protected void onPostExecute(Void aVoid) {
-            super.onPostExecute(aVoid);
-            Toast.makeText(mContext,"Image Downloaded to sd card",Toast.LENGTH_SHORT).show();
+
+/*    // Custom method to save a bitmap into internal storage
+    protected Uri saveImageToInternalStorage(Bitmap bitmap){
+        // Initialize ContextWrapper
+        ContextWrapper wrapper = new ContextWrapper();
+
+        // Initializing a new file
+        // The bellow line return a directory in internal storage
+        File file = wrapper.getDir("Images",MODE_PRIVATE);
+
+        // Create a file to save the image
+        file = new File(file, "UniqueFileName"+".jpg");
+
+        try{
+            // Initialize a new OutputStream
+            OutputStream stream = null;
+
+            // If the output file exists, it can be replaced or appended to it
+            stream = new FileOutputStream(file);
+
+            // Compress the bitmap
+            bitmap.compress(Bitmap.CompressFormat.JPEG,100,stream);
+
+            // Flushes the stream
+            stream.flush();
+
+            // Closes the stream
+            stream.close();
+
+            Toast.makeText(mContext, "Save", Toast.LENGTH_SHORT).show();
+        }catch (IOException e) // Catch the exception
+        {
+            e.printStackTrace();
         }
+
+        // Parse the gallery image url to uri
+        Uri savedImageURI = Uri.parse(file.getAbsolutePath());
+
+        // Return the saved image Uri
+        return savedImageURI;
+    }*/
     }
-    }
\ No newline at end of file
+}
Index: app/src/main/java/com/isysnext/feedapp/dto/DrawerDataModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp.dto;\n\n/**\n * Created by Anuved on 28/08/18.\n */\npublic class DrawerDataModel {\n    int drawerImage;\n\n    public int getDrawerImage() {\n        return drawerImage;\n    }\n\n    public void setDrawerImage(int drawerImage) {\n        this.drawerImage = drawerImage;\n    }\n\n    public DrawerDataModel(int drawerImage) {\n        this.drawerImage = drawerImage;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/dto/DrawerDataModel.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/dto/DrawerDataModel.java	(date 1535701938363)
@@ -6,6 +6,16 @@
 public class DrawerDataModel {
     int drawerImage;
 
+    public String getDrawerText() {
+        return drawerText;
+    }
+
+    public void setDrawerText(String drawerText) {
+        this.drawerText = drawerText;
+    }
+
+    String drawerText;
+
     public int getDrawerImage() {
         return drawerImage;
     }
@@ -14,7 +24,8 @@
         this.drawerImage = drawerImage;
     }
 
-    public DrawerDataModel(int drawerImage) {
+    public DrawerDataModel(int drawerImage, String drawerText) {
         this.drawerImage = drawerImage;
+        this.drawerText = drawerText;
     }
 }
Index: app/src/main/java/com/isysnext/feedapp/AboutUs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport com.isysnext.feedapp.adapter.CategoryAdapter;\nimport com.isysnext.feedapp.dto.CategoryData;\nimport com.isysnext.feedapp.dto.TabDTO;\nimport com.isysnext.feedapp.utility.Utilities;\nimport java.util.ArrayList;\n\n/**\n * Created by Anuved on 29/08/18.\n */\npublic class AboutUs  extends Fragment {\n    //Declaration of variables\n    private View parentView;\n    private Context context;\n    static Context Mcontext;\n    FragmentManager fragmentManager;\n    static android.support.v4.app.FragmentManager fm;\n    RecyclerView homeCategoryList;\n    ArrayList<TabDTO.Category> listCategory;\n    CategoryAdapter adapter;\n    CategoryData data;\n    private ImageView back_appointment;\n    View view, viewCategory;\n    Fragment fragment = null;\n    private Utilities utilities;\n    public static String sStrCategoryCheck = \"\";\n\n    public static Fragment getInstance(Context Mcntx, FragmentManager FM) {\n        Mcontext = Mcntx;\n        fm = FM;\n        Fragment frag = new AboutUs();\n        return frag;\n\n    }\n\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.about_us, container, false);\n       ;\n        return view;\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/AboutUs.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/AboutUs.java	(date 1535708444885)
@@ -1,6 +1,9 @@
 package com.isysnext.feedapp;
 
+import android.content.ActivityNotFoundException;
 import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -9,6 +12,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
+import android.widget.TextView;
+
 import com.isysnext.feedapp.adapter.CategoryAdapter;
 import com.isysnext.feedapp.dto.CategoryData;
 import com.isysnext.feedapp.dto.TabDTO;
@@ -29,6 +34,7 @@
     ArrayList<TabDTO.Category> listCategory;
     CategoryAdapter adapter;
     CategoryData data;
+    ImageView img_fb,img_rate,img_share;
     private ImageView back_appointment;
     View view, viewCategory;
     Fragment fragment = null;
@@ -45,8 +51,61 @@
 
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         view = inflater.inflate(R.layout.about_us, container, false);
-       ;
+
+        img_fb = (ImageView) view.findViewById(R.id.img_fb);
+        img_rate = (ImageView) view.findViewById(R.id.img_rate);
+        img_share = (ImageView) view.findViewById(R.id.img_share);
+
+        img_share.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent sendIntent = new Intent();
+                sendIntent.setAction(Intent.ACTION_SEND);
+                sendIntent.putExtra(Intent.EXTRA_TEXT, "This is my text to send.");
+                sendIntent.setType("text/plain");
+                startActivity(Intent.createChooser(sendIntent, getResources().getText(R.string.send_to)));
+            }
+        });
+        img_rate.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    startActivity(new Intent(Intent.ACTION_VIEW,
+                            Uri.parse("market://details?id=" + getActivity().getPackageName())));
+                } catch (android.content.ActivityNotFoundException e) {
+                    startActivity(new Intent(Intent.ACTION_VIEW,
+                            Uri.parse("http://play.google.com/store/apps/details?id=" + getActivity().getPackageName())));
+                }
+            }
+        });
+        img_fb.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
+        img_fb.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showUrl("https://github.com/jrvansuita/MaterialAbout");
+            }
+        });
+
         return view;
     }
+    //Methos for showing
+    public void showUrl(String url) {
+        try {
+            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url)).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            context.startActivity(intent);
+        } catch (ActivityNotFoundException ex) {
+            ex.printStackTrace();
+            // utilities.dialogOK(context,context.getResources().getString(R.string.browser_error), false);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
 
 }
\ No newline at end of file
Index: app/src/main/java/com/isysnext/feedapp/Home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport com.android.volley.Request;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.StringRequest;\nimport com.android.volley.toolbox.Volley;\nimport com.google.gson.Gson;\nimport com.isysnext.feedapp.adapter.CategoryAdapter;\nimport com.isysnext.feedapp.dto.CategoryData;\nimport com.isysnext.feedapp.dto.TabDTO;\nimport com.isysnext.feedapp.utility.OnItemClickListener;\nimport com.isysnext.feedapp.utility.Utilities;\nimport java.util.ArrayList;\n\n/**\n * Created by Anuved on 29/08/18.\n */\npublic class Home extends Fragment  {\n\n    private View parentView;\n    private Context context;\n    static Context Mcontext;\n    FragmentManager fragmentManager;\n    static android.support.v4.app.FragmentManager fm;\n    RecyclerView homeCategoryList;\n    ArrayList<TabDTO.Category> listCategory;\n    CategoryAdapter adapter;\n    CategoryData data;\n    private ImageView back_appointment;\n    View view,viewCategory;\n    Fragment fragment = null;\n    private Utilities utilities;\n    public static String sStrCategoryCheck=\"\";\n\n    public static Fragment getInstance(Context Mcntx, FragmentManager FM) {\n        Mcontext = Mcntx;\n        fm = FM;\n        Fragment frag = new Home();\n        return frag;\n\n    }\n\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.home_fragment, container, false);\n        context = getActivity();\n        utilities = Utilities.getInstance(getActivity());\n        listCategory = new ArrayList<>();\n        fragmentManager = getChildFragmentManager();\n       // viewCategory = (View) view.findViewById(R.id.view_category);\n        homeCategoryList = (RecyclerView) view.findViewById(R.id.home_category_list);\n        callVolleyCategoryList();\n        showFragment();\n        return view;\n    }\n\n    //Method for setting recycler view of category\n    private void setUpRecyclerViewCategory() {\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getActivity(), LinearLayoutManager.HORIZONTAL, false);\n        homeCategoryList.setLayoutManager(linearLayoutManager);\n        adapter = new CategoryAdapter(context, listCategory, onItemClickCallback);\n        homeCategoryList.setAdapter(adapter);\n    }\n\n    //Method for calling volley web service of category list\n    private void callVolleyCategoryList() {\n        if (!utilities.isNetworkAvailable())\n            utilities.dialogOK(getActivity(), \"\", getResources().getString(R.string.network_error), getString(R.string.ok), false);\n        else {\n            String url = \"https://raw.githubusercontent.com/uidhinc/DishaPatani/master/wallpapers.json\";\n            StringRequest stringRequest = new StringRequest(Request.Method.GET, url,\n                    new com.android.volley.Response.Listener<String>() {\n                        @Override\n                        public void onResponse(String response) {\n                            try {\n                                Log.e(\"Response=====\",response);\n                                if (response == null) {\n                                    utilities.dialogOK(context, context.getResources().getString(R.string.whoops), context.getResources().getString(R.string.server_error),\n                                            context.getString(R.string.ok), false);\n                                } else {\n                                    Gson gson = new Gson();\n                                    TabDTO tabDTO = gson.fromJson(response, TabDTO.class);\n                                    if (tabDTO.getCategories().size() > 0) {\n                                        listCategory.addAll(tabDTO.getCategories());\n                                        sStrCategoryCheck=listCategory.get(0).getName();\n                                        setUpRecyclerViewCategory();\n                                    }\n                                }\n                            } catch (Exception e) {\n                                e.printStackTrace();\n                            }\n                        }\n                    }, new com.android.volley.Response.ErrorListener() {\n                @Override\n                public void onErrorResponse(VolleyError error) {\n\n                }\n            });\n            //Add the request to the RequestQueue.\n            Volley.newRequestQueue(context).add(stringRequest);\n        }\n    }\n\n\n    //Adapter click on list item\n    private OnItemClickListener.OnItemClickCallback onItemClickCallback = new OnItemClickListener.OnItemClickCallback() {\n        @Override\n        public void onItemClicked(View view, int position) {\n            switch (position) {\n                case 0:\n                    sStrCategoryCheck=listCategory.get(position).getName();\n                    showFragment();\n                    break;\n                case 1:\n                    sStrCategoryCheck=listCategory.get(position).getName();\n                    showFragment();\n                    break;\n                case 2:\n                    sStrCategoryCheck=listCategory.get(position).getName();\n                    showFragment();\n                    break;\n                case 3:\n                    sStrCategoryCheck=listCategory.get(position).getName();\n                    showFragment();\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n\n    //Method for showing fragment\n    private void showFragment() {\n        fragmentManager = getActivity().getSupportFragmentManager();\n        fragment = Retrospective.getInstance(getActivity(), fragmentManager);\n        fragmentManager.beginTransaction().replace(R.id.home_container, fragment, \"Retrospective\").commit();\n    }\n\n    }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/Home.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/Home.java	(date 1535724674481)
@@ -1,6 +1,7 @@
 package com.isysnext.feedapp;
 
 import android.content.Context;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -56,6 +57,7 @@
         context = getActivity();
         utilities = Utilities.getInstance(getActivity());
         listCategory = new ArrayList<>();
+        initToolbar();
         fragmentManager = getChildFragmentManager();
        // viewCategory = (View) view.findViewById(R.id.view_category);
         homeCategoryList = (RecyclerView) view.findViewById(R.id.home_category_list);
@@ -145,5 +147,16 @@
         fragment = Retrospective.getInstance(getActivity(), fragmentManager);
         fragmentManager.beginTransaction().replace(R.id.home_container, fragment, "Retrospective").commit();
     }
+    //Method for initializing toolbar
+    private void initToolbar() {
+        android.support.v7.app.ActionBar actionBar = ((MainActivity) context).getSupportActionBar();
+        actionBar.show();
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        ((MainActivity) getActivity()).setNavigation(getResources().getString(R.string.wallpaper));
+        ColorDrawable colorDrawable = new ColorDrawable();
+        actionBar.setBackgroundDrawable(colorDrawable);
+        colorDrawable.setColor(getResources().getColor(R.color.colorPrimary));
+        actionBar.setDisplayShowTitleEnabled(false);
+    }
 
     }
Index: app/src/main/java/com/isysnext/feedapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp;\n\nimport android.Manifest;\nimport android.content.pm.ActivityInfo;\nimport android.content.pm.PackageManager;\nimport android.os.Build;\nimport android.support.annotation.RequiresApi;\nimport android.support.v4.app.ActivityCompat;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;\nimport android.widget.AdapterView;\nimport android.widget.ListView;\nimport android.widget.TextView;\nimport android.support.v7.widget.Toolbar;\n\nimport com.isysnext.feedapp.adapter.DrawerAdpter;\nimport com.isysnext.feedapp.dto.DrawerDataModel;\n\nimport java.util.ArrayList;\n\npublic class MainActivity extends AppCompatActivity {\n\n    Fragment fragment = null;\n    FragmentManager fragmentManager;\n    ListView trayListMenu;\n    ArrayList<DrawerDataModel> arrayList;\n    DrawerDataModel data;\n    Toolbar toolbar;\n    TextView toolbar_text;\n    private static final int EXTERNAL_STORAGE_PERMISSION_CONSTANT = 100;\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\n        setContentView(R.layout.activity_main);\n        // Hide the Status Bar\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        setRequestedOrientation (ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, EXTERNAL_STORAGE_PERMISSION_CONSTANT);\n        }\n        trayListMenu = (ListView) findViewById(R.id.tray_list_menu);\n        arrayList = new ArrayList<>();\n\n        toolbar = (Toolbar) findViewById(R.id.toolbar_splash);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\n        toolbar_text = (TextView) findViewById(R.id.toolbar_title);\n        toolbar_text.setText(\"Wallpaper\");\n\n        fragmentManager = getSupportFragmentManager();\n        fragment = Home.getInstance(this, fragmentManager);\n        fragmentManager.beginTransaction().replace(R.id.main_container, fragment, \"Home\").commit();\n        data = new DrawerDataModel(R.mipmap.disha_patani);\n        arrayList.add(data);\n\n        data = new DrawerDataModel(R.mipmap.ic_wall);\n        arrayList.add(data);\n\n        data = new DrawerDataModel(R.mipmap.ic_tw);\n        arrayList.add(data);\n\n       /* data = new DrawerDataModel(R.mipmap.ic_insta);\n        arrayList.add(data);*/\n\n        data = new DrawerDataModel(R.mipmap.ic_about);\n        arrayList.add(data);\n\n        trayListMenu.setAdapter(new DrawerAdpter(this,arrayList));\n        trayListMenu.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                if(position==1)\n                {\n                    fragment = Home.getInstance(MainActivity.this, fragmentManager);\n                    fragmentManager.beginTransaction().replace(R.id.main_container, fragment, \"Home\").commit();\n                    toolbar_text.setText(\"Wallpaper\");\n                }\n                if (position==2)\n                {\n                    getSupportFragmentManager().beginTransaction()\n                            .replace(R.id.main_container, new TwitterFeeds()).addToBackStack(\"\").commit();\n                    toolbar_text.setText(\"Twitter\");\n                }\n                if (position==3)\n                {\n                    fragment = AboutUs.getInstance(MainActivity.this, fragmentManager);\n                    fragmentManager.beginTransaction().replace(R.id.main_container, fragment, \"AboutsUs\").commit();\n                    toolbar_text.setText(\"About Us\");\n                }\n            }\n        });\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/MainActivity.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/MainActivity.java	(date 1535727174624)
@@ -3,36 +3,57 @@
 import android.Manifest;
 import android.content.pm.ActivityInfo;
 import android.content.pm.PackageManager;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Build;
+import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
+import android.support.design.widget.NavigationView;
 import android.support.v4.app.ActivityCompat;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
+import android.text.Spannable;
+import android.text.SpannableString;
+import android.text.style.ForegroundColorSpan;
+import android.util.Log;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
 import android.widget.AdapterView;
+import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.TextView;
 import android.support.v7.widget.Toolbar;
+import android.widget.ToggleButton;
 
 import com.isysnext.feedapp.adapter.DrawerAdpter;
 import com.isysnext.feedapp.dto.DrawerDataModel;
+import com.isysnext.feedapp.utility.Utilities;
 
 import java.util.ArrayList;
 
-public class MainActivity extends AppCompatActivity {
+public class MainActivity extends AppCompatActivity implements View.OnClickListener, NavigationView.OnNavigationItemSelectedListener{
 
     Fragment fragment = null;
     FragmentManager fragmentManager;
-    ListView trayListMenu;
+    ListView drawerListMenu;
     ArrayList<DrawerDataModel> arrayList;
     DrawerDataModel data;
     Toolbar toolbar;
     TextView toolbar_text;
+    ToggleButton on_off;
+    LinearLayout dashboardLy;
+    ActionBarDrawerToggle toggle;
+    NavigationView navigationView;
+    DrawerLayout drawerLayout;
     private static final int EXTERNAL_STORAGE_PERMISSION_CONSTANT = 100;
+
     @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -47,57 +68,165 @@
         if (ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
             ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, EXTERNAL_STORAGE_PERMISSION_CONSTANT);
         }
-        trayListMenu = (ListView) findViewById(R.id.tray_list_menu);
+       drawerListMenu = (ListView) findViewById(R.id.drawer_list_menu);
         arrayList = new ArrayList<>();
 
+        dashboardLy = (LinearLayout) findViewById(R.id.dashboard_ly);
         toolbar = (Toolbar) findViewById(R.id.toolbar_splash);
         setSupportActionBar(toolbar);
+        //toolbar.setNavigationIcon(R.mipmap.ic_about);
         getSupportActionBar().setDisplayShowTitleEnabled(false);
+        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
+        toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+       drawerLayout.addDrawerListener(toggle);
+        drawerLayout.setDrawerListener(mDrawerListener);toggle.syncState();
+         drawerLayout.closeDrawer(GravityCompat.START);
         toolbar_text = (TextView) findViewById(R.id.toolbar_title);
-        toolbar_text.setText("Wallpaper");
-
+       //  toolbar_text.setText("Wallpaper");
         fragmentManager = getSupportFragmentManager();
         fragment = Home.getInstance(this, fragmentManager);
         fragmentManager.beginTransaction().replace(R.id.main_container, fragment, "Home").commit();
-        data = new DrawerDataModel(R.mipmap.disha_patani);
-        arrayList.add(data);
+
+        setData();
+        setAdapter();
+    }
+    /**
+     * method to intilize all view's
+     */
+    private DrawerLayout.DrawerListener mDrawerListener = new DrawerLayout.DrawerListener() {
+
+        @Override
+        public void onDrawerStateChanged(int status) {
+
+        }
+
+        @Override
+        public void onDrawerSlide(View view, float slideArg) {
 
-        data = new DrawerDataModel(R.mipmap.ic_wall);
-        arrayList.add(data);
+        }
+
+        @Override
+        public void onDrawerOpened(View view) {
+        }
+
+        @Override
+        public void onDrawerClosed(View view) {
+        }
+    };
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+        // Handle navigation view item clicks here.
+        int id = item.getItemId();
+
+        drawerLayout.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+    @Override
+    public void onClick(View v) {
+        /*if (v == dashboardLy) {
+
+            fragment = Home.getInstance(MainActivity.this, fragmentManager);
+            fragmentManager.beginTransaction().replace(R.id.main_container, fragment, "Home").commit();
+            toolbar_text.setText("Wallpaper");
+            drawerLayout.closeDrawer(GravityCompat.START);
+        }*/
+        }
+    //set values inside list of drawer menu
+        public void setData()
+        {
+
+            data = new DrawerDataModel(R.mipmap.ic_wall,"Wallpaper");
+            arrayList.add(data);
 
-        data = new DrawerDataModel(R.mipmap.ic_tw);
-        arrayList.add(data);
+            data = new DrawerDataModel(R.mipmap.ic_tw,"Twitter");
+            arrayList.add(data);
 
-       /* data = new DrawerDataModel(R.mipmap.ic_insta);
-        arrayList.add(data);*/
-
-        data = new DrawerDataModel(R.mipmap.ic_about);
-        arrayList.add(data);
+            data = new DrawerDataModel(R.mipmap.ic_about,"About Us");
+            arrayList.add(data);
 
-        trayListMenu.setAdapter(new DrawerAdpter(this,arrayList));
-        trayListMenu.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+        }
+    //set values on list
+        public void setAdapter()
+        {
+              drawerListMenu.setAdapter(new DrawerAdpter(this,arrayList));
+            drawerListMenu.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                if(position==1)
+                if(position==0)
                 {
                     fragment = Home.getInstance(MainActivity.this, fragmentManager);
                     fragmentManager.beginTransaction().replace(R.id.main_container, fragment, "Home").commit();
                     toolbar_text.setText("Wallpaper");
+                    drawerLayout.closeDrawer(GravityCompat.START);
                 }
-                if (position==2)
+                if (position==1)
                 {
                     getSupportFragmentManager().beginTransaction()
                             .replace(R.id.main_container, new TwitterFeeds()).addToBackStack("").commit();
                     toolbar_text.setText("Twitter");
+                    drawerLayout.closeDrawer(GravityCompat.START);
                 }
-                if (position==3)
+                if (position==2)
                 {
                     fragment = AboutUs.getInstance(MainActivity.this, fragmentManager);
                     fragmentManager.beginTransaction().replace(R.id.main_container, fragment, "AboutsUs").commit();
                     toolbar_text.setText("About Us");
+                    drawerLayout.closeDrawer(GravityCompat.START);
                 }
             }
         });
 
+        }
+
+    @Override
+    public void onBackPressed() {
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        if (fragmentManager.getBackStackEntryCount() > 0) {
+            fragmentManager.popBackStack();
+            drawerLayout.isDrawerOpen(GravityCompat.START);
+                drawerLayout.closeDrawer(GravityCompat.START);
+        }
     }
+
+    //Method for creating back button on required screen
+    public void createBackButton(String title) {
+        toolbar.setNavigationIcon(R.mipmap.ic_action_menu);
+        Spannable text = new SpannableString(title);
+        text.setSpan(new ForegroundColorSpan(getResources().getColor(R.color.white)),
+                0, text.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+        toolbar_text.setText(text.toString());
+
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+        switch (id) {
+            case android.R.id.home:
+                FragmentManager fragmentManager = getSupportFragmentManager();
+                if (fragmentManager.getBackStackEntryCount() > 0) {
+                    fragmentManager.popBackStack();
+                    Log.i(getClass().getName(), "stack count: " + fragmentManager.getBackStackEntryCount());
+                }
+                else
+                {
+                    drawerLayout.isDrawerOpen(GravityCompat.START);
+                }
+                break;
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    public void setNavigation(String title) {
+
+        Spannable text = new SpannableString(title);
+        text.setSpan(new ForegroundColorSpan(getResources().getColor(R.color.white)),
+                0, text.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE);
+        toolbar_text.setText(text.toString());
+
+    }
 }
+
Index: app/src/main/java/com/isysnext/feedapp/Retrospective.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.isysnext.feedapp;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.GridView;\nimport android.widget.ImageView;\nimport com.android.volley.Request;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.StringRequest;\nimport com.android.volley.toolbox.Volley;\nimport com.google.gson.Gson;\nimport com.isysnext.feedapp.adapter.RetrospectiveAdapter;\nimport com.isysnext.feedapp.dto.TabDTO;\nimport com.isysnext.feedapp.utility.OnItemClickListener;\nimport com.isysnext.feedapp.utility.Utilities;\n\nimport java.util.ArrayList;\n\npublic class Retrospective extends Fragment  {\n    static Context Mcontext;\n    private Context context;\n    FragmentManager fragmentManager;\n    static FragmentManager fm;\n    private ImageView back_appointment;\n    private GridView recyclerView;\n    View view;\n    private RecyclerView retrospective_list;\n    Fragment fragment = null;\n    private Utilities utilities;\n    ArrayList<TabDTO.Wallpaper> listWallpaper;\n    RetrospectiveAdapter adapter;\n    private LinearLayoutManager mLinearLayoutManager;\n\n    public static Fragment getInstance(Context Mcntx, FragmentManager FM) {\n        Mcontext = Mcntx;\n        fm = FM;\n        Fragment frag = new Retrospective();\n        return frag;\n    }\n\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\n        view = inflater.inflate(R.layout.retrospective_fragment, container, false);\n        context = getActivity();\n        utilities = Utilities.getInstance(getActivity());\n        listWallpaper = new ArrayList<>();\n        recyclerView = (GridView) view.findViewById(R.id.list_retrospective);\n        callVolleyWallpaperList();\n        return view;\n    }\n\n    //Method for setting recycler view of wallpaper\n    private void setUpRecyclerViewWallpaper() {\n        //AutoFitGridLayoutManager layoutManager = new AutoFitGridLayoutManager(context, 500);\n        //mLinearLayoutManager = new LinearLayoutManager(context);\n        //recyclerView.setLayoutManager(mLinearLayoutManager);\n        adapter = new RetrospectiveAdapter(context, listWallpaper);\n        recyclerView.setAdapter(adapter);\n    }\n\n    //Method for calling volley web service of wallpaper list\n    private void callVolleyWallpaperList() {\n        if (!utilities.isNetworkAvailable())\n            utilities.dialogOK(getActivity(), \"\", getResources().getString(R.string.network_error), getString(R.string.ok), false);\n        else {\n            String url = \"https://raw.githubusercontent.com/uidhinc/DishaPatani/master/wallpapers.json\";\n            StringRequest stringRequest = new StringRequest(Request.Method.GET, url,\n                    new com.android.volley.Response.Listener<String>() {\n                        @Override\n                        public void onResponse(String response) {\n                            try {\n                                if (response == null) {\n                                    utilities.dialogOK(context, context.getResources().getString(R.string.whoops), context.getResources().getString(R.string.server_error),\n                                            context.getString(R.string.ok), false);\n                                } else {\n                                    Gson gson = new Gson();\n                                    TabDTO tabDTO = gson.fromJson(response, TabDTO.class);\n                                    if (tabDTO.getCategories().size() > 0) {\n                                        Log.e(\"ListBeforeRemove\", \"\" + listWallpaper.size());\n                                        listWallpaper.clear();\n                                        for (int i = 0; i < tabDTO.getWallpapers().size(); i++) {\n                                            if (tabDTO.getWallpapers().get(i).getCategory().equals(Home.sStrCategoryCheck))\n                                                listWallpaper.add(tabDTO.getWallpapers().get(i));\n                                        }\n                                        Log.e(\"ListAfterRemove\", \"\" + listWallpaper.size());\n                                        setUpRecyclerViewWallpaper();\n                                    }\n                                }\n                            } catch (Exception e) {\n                                e.printStackTrace();\n                            }\n                        }\n                    }, new com.android.volley.Response.ErrorListener() {\n                @Override\n                public void onErrorResponse(VolleyError error) {\n\n                }\n            });\n            //Add the request to the RequestQueue.\n            Volley.newRequestQueue(context).add(stringRequest);\n        }\n    }\n\n    //Adapter click on list item\n    private OnItemClickListener.OnItemClickCallback onItemClickCallback = new OnItemClickListener.OnItemClickCallback() {\n        @Override\n        public void onItemClicked(View view, int position) {\n            switch (position) {\n                case 0:\n                    break;\n                case 1:\n                    break;\n                case 2:\n                    break;\n                case 3:\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/isysnext/feedapp/Retrospective.java	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/java/com/isysnext/feedapp/Retrospective.java	(date 1535722593601)
@@ -1,6 +1,7 @@
 package com.isysnext.feedapp;
 
 import android.content.Context;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
@@ -51,6 +52,7 @@
         view = inflater.inflate(R.layout.retrospective_fragment, container, false);
         context = getActivity();
         utilities = Utilities.getInstance(getActivity());
+        initToolbar();
         listWallpaper = new ArrayList<>();
         recyclerView = (GridView) view.findViewById(R.id.list_retrospective);
         callVolleyWallpaperList();
@@ -62,7 +64,7 @@
         //AutoFitGridLayoutManager layoutManager = new AutoFitGridLayoutManager(context, 500);
         //mLinearLayoutManager = new LinearLayoutManager(context);
         //recyclerView.setLayoutManager(mLinearLayoutManager);
-        adapter = new RetrospectiveAdapter(context, listWallpaper);
+        adapter = new RetrospectiveAdapter(context, listWallpaper,onItemClickCallback);
         recyclerView.setAdapter(adapter);
     }
 
@@ -109,11 +111,32 @@
         }
     }
 
+    //Method for initializing header
+  //Method for initializing header
+    private void initToolbar() {
+        android.support.v7.app.ActionBar actionBar = ((MainActivity) context).getSupportActionBar();
+        actionBar.show();
+        actionBar.setDisplayHomeAsUpEnabled(true);
+        ((MainActivity) getActivity()).createBackButton("Wallpaper");
+        ColorDrawable colorDrawable = new ColorDrawable();
+        colorDrawable.setColor(getResources().getColor(R.color.colorPrimary));
+        actionBar.setBackgroundDrawable(colorDrawable);
+        actionBar.setDisplayShowTitleEnabled(false);
+    }
     //Adapter click on list item
     private OnItemClickListener.OnItemClickCallback onItemClickCallback = new OnItemClickListener.OnItemClickCallback() {
         @Override
         public void onItemClicked(View view, int position) {
-            switch (position) {
+
+            Bundle args = new Bundle();
+            args.putString("image",listWallpaper.get(position).getUrl());
+            args.putString("thumb",listWallpaper.get(position).getUrl());
+            fragmentManager = getActivity().getSupportFragmentManager();
+            fragment = FullViewFragment.getInstance(getActivity(), fragmentManager);
+            fragment.setArguments(args);
+            fragmentManager.beginTransaction().replace(R.id.main_container, fragment, "Retrospective").addToBackStack("Retrospective").commit();
+
+     /*       switch (position) {
                 case 0:
                     break;
                 case 1:
@@ -124,7 +147,7 @@
                     break;
                 default:
                     break;
-            }
+            }*/
         }
     };
 }
Index: app/src/main/res/layout/about_us.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:text=\"Coming Soon....\"\n        android:layout_gravity=\"center\"\n        android:gravity=\"center\"\n        android:textSize=\"20sp\"\n        android:textColor=\"@color/colorPrimaryDark\"/>\n\n</android.support.constraint.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/about_us.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/layout/about_us.xml	(date 1535731548677)
@@ -1,15 +1,224 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout
+<RelativeLayout
     xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/gray_dark">
+<ScrollView
+    android:layout_width="match_parent"
     android:layout_height="match_parent">
+ <RelativeLayout
+     android:layout_width="match_parent"
+     android:layout_height="match_parent"
+     android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="150dp"
+        android:background="@color/colorPrimaryDark">
+    </LinearLayout>
+
+
+
+     <LinearLayout
+         android:layout_width="match_parent"
+         android:layout_height="match_parent"
+         android:background="@color/gray_dark"
+         android:layout_marginTop="145dp"
+         android:orientation="vertical">
 
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="Coming Soon...."
-        android:layout_gravity="center"
-        android:gravity="center"
-        android:textSize="20sp"
-        android:textColor="@color/colorPrimaryDark"/>
+         <TextView
+             android:layout_width="match_parent"
+             android:layout_height="wrap_content"
+             android:id="@+id/tv_name"
+             android:layout_marginTop="10dp"
+             android:textStyle="bold"
+             android:text="@string/android_dev_name"
+             android:gravity="center"
+             android:textColor="@color/white"
+             android:padding="5dp"
+             android:textSize="18sp"/>
+         <TextView
+             android:layout_width="match_parent"
+             android:layout_height="wrap_content"
+             android:id="@+id/tv_designation"
+             android:textStyle="bold"
+             android:text="@string/android_dev_designation"
+             android:gravity="center"
+             android:textColor="@color/white"
+             android:textSize="16sp"/>
+
+
+         <TextView
+             android:layout_width="match_parent"
+             android:layout_height="wrap_content"
+             android:id="@+id/tv_about_devloper"
+             android:textStyle="bold"
+             android:text="@string/about_us_dev"
+             android:gravity="center"
+             android:padding="10dp"
+             android:layout_marginTop="40dp"
+             android:textColor="@color/white"
+             android:textSize="16sp"/>
+
+
+
+         <View
+             android:layout_width="match_parent"
+             android:layout_height="0.01dp"
+             android:layout_marginTop="40dp"
+             android:background="@color/grey"></View>
+
+         <TextView
+             android:layout_width="match_parent"
+             android:layout_height="wrap_content"
+             android:padding="10dp"
+             android:layout_marginLeft="5dp"
+             android:text="Follow me on"
+             android:textColor="@color/white"
+             android:textSize="14sp"/>
+
+         <LinearLayout
+             android:layout_width="wrap_content"
+             android:layout_height="wrap_content"
+             android:gravity="center"
+             android:layout_gravity="center"
+             android:orientation="horizontal">
+
+             <ImageView
+                 android:id="@+id/img_fb"
+                 android:layout_width="40dp"
+                 android:layout_height="wrap_content"
+                 android:src="@mipmap/fb"
+                 android:autoLink="web"
+                 android:layout_gravity="center"
+                 android:layout_marginLeft="20dp"
+                 android:layout_marginRight="20dp"
+                 android:textColor="@color/white"/>
+
+             <ImageView
+                 android:id="@+id/img_tweet"
+                 android:layout_width="40dp"
+                 android:layout_height="wrap_content"
+                 android:src="@mipmap/twitter"
+                 android:autoLink="web"
+                 android:layout_marginRight="20dp"
+                 android:textColor="@color/white"/>
+
+             <ImageView
+                 android:id="@+id/img_git"
+                 android:layout_width="40dp"
+                 android:layout_height="wrap_content"
+                 android:src="@mipmap/git"
+                 android:autoLink="web"
+                 android:layout_marginRight="20dp"
+                 android:textColor="@color/white"/>
+
+             <ImageView
+                 android:id="@+id/img_insta"
+                 android:layout_width="40dp"
+                 android:layout_height="wrap_content"
+                 android:src="@mipmap/insta"
+                 android:autoLink="web"
+                 android:layout_marginRight="20dp"
+                 android:textColor="@color/white"/>
+
+             <ImageView
+                 android:id="@+id/img_linked"
+                 android:layout_width="40dp"
+                 android:layout_height="wrap_content"
+                 android:src="@mipmap/linkedin"
+                 android:autoLink="web"
+                 android:layout_marginRight="20dp"
+                 android:textColor="@color/white"/>
+         </LinearLayout>
+
+         <LinearLayout
+             android:layout_width="wrap_content"
+             android:layout_height="wrap_content"
+             android:gravity="center_horizontal"
+             android:layout_marginTop="20dp"
+             android:layout_marginBottom="20dp"
+             android:layout_gravity="center"
+             android:orientation="horizontal">
+
+             <LinearLayout
+                 android:layout_width="match_parent"
+                 android:layout_height="wrap_content"
+                 android:gravity="center"
+                 android:layout_gravity="center"
+                 android:orientation="vertical">
+
+                 <TextView
+                     android:layout_width="match_parent"
+                     android:layout_height="wrap_content"
+                     android:padding="5dp"
+                     android:text="Rate Us"
+                     android:textColor="@color/colorPrimary"
+                     android:textSize="14sp"/>
+
+
+             <ImageView
+                 android:id="@+id/img_rate"
+                 android:layout_width="40dp"
+                 android:layout_height="wrap_content"
+                 android:src="@mipmap/rate"
+                 android:gravity="center"
+                 android:layout_marginLeft="20dp"
+                 android:layout_marginRight="40dp"
+                 android:textColor="@color/white"/>
+             </LinearLayout>
+             <LinearLayout
+                 android:layout_width="wrap_content"
+                 android:layout_height="wrap_content"
+                 android:layout_gravity="center"
+                 android:gravity="center"
+                 android:orientation="vertical">
+
+                 <TextView
+                     android:layout_width="match_parent"
+                     android:layout_height="wrap_content"
+                     android:padding="5dp"
+                     android:text="Share"
+                     android:layout_gravity="center"
+                     android:gravity="center"
+                     android:textColor="@color/colorPrimary"
+                     android:textSize="14sp"/>
+
+
+                 <ImageView
+                     android:id="@+id/img_share"
+                     android:layout_width="60dp"
+                     android:layout_height="wrap_content"
+                     android:src="@mipmap/share"
+                     android:layout_marginLeft="0dp"
+                     android:layout_marginRight="0dp"
+                     android:textColor="@color/white"/>
+             </LinearLayout>
 
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
+
+         </LinearLayout>
+
+         <TextView
+             android:layout_width="match_parent"
+             android:layout_height="wrap_content"
+             android:layout_gravity="center"
+             android:text="Thanks for Visit"
+             android:gravity="center"
+             android:layout_marginBottom="15dp"
+             android:textColor="@color/white"
+             android:textSize="14sp"
+             android:textStyle="bold"/>
+     </LinearLayout>
+
+     <ImageView
+         android:layout_width="80dp"
+         android:layout_height="80dp"
+         android:id="@+id/img"
+         android:layout_centerHorizontal="true"
+         android:layout_gravity="center"
+         android:layout_marginTop="90dp"
+         android:src="@drawable/disha_patani_new"/>
+
+ </RelativeLayout>
+</ScrollView>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <android.support.v7.widget.Toolbar app:title=\"\"\n        android:title=\"\"\n        android:layout_height=\"wrap_content\"\n        android:layout_width=\"match_parent\"\n        android:id=\"@+id/toolbar_splash\"\n        android:background=\"@color/colorPrimary\"\n        android:minHeight=\"?attr/actionBarSize\">\n\n        <TextView android:layout_height=\"wrap_content\"\n            android:layout_width=\"wrap_content\"\n            android:id=\"@+id/toolbar_title\"\n            android:layout_gravity=\"center\"\n            android:textSize=\"18sp\"\n            android:text=\"\"\n            android:textStyle=\"bold\"\n            android:textColor=\"@color/white\"/>\n    </android.support.v7.widget.Toolbar>\n\n    <FrameLayout\n        android:id=\"@+id/main_container\"\n        android:layout_below=\"@+id/toolbar_splash\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n    </FrameLayout>\n    <SlidingDrawer\n        android:id=\"@+id/simpleSlidingDrawer\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"wrap_content\"\n        android:content=\"@+id/content\"\n        android:handle=\"@+id/handle\"\n        android:visibility=\"visible\"\n        android:orientation=\"horizontal\"\n        android:rotation=\"180\">\n\n        <!-- Button for the handle of SlidingDrawer -->\n        <Button\n            android:id=\"@id/handle\"\n            android:layout_width=\"35dp\"\n            android:layout_height=\"80dp\"\n            android:padding=\"0dp\"\n            android:background=\"@drawable/side_tray_update\"\n            android:rotation=\"180\"\n            android:textColor=\"#fff\"/>\n        <!-- layout for the content of the SLidingDrawer -->\n        <LinearLayout\n            android:id=\"@id/content\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"vertical\"\n            android:gravity=\"center_vertical\"\n            android:rotation=\"180\">\n\n            <LinearLayout\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:id=\"@+id/linear_layout_tray\"\n                android:orientation=\"vertical\"\n                android:layout_gravity=\"center\"\n                android:gravity=\"center\"\n                android:background=\"@drawable/border_tray_layout\">\n\n                <!-- DEFINE ALL YOUR CONTENT,WIDGETS HERE WHICH YOU WANT TO ADD IN SLIDING DRAWER LAYOUT. -->\n                <ListView\n                    android:id=\"@+id/tray_list_menu\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginTop=\"5dp\"\n                    android:layout_marginBottom=\"5dp\"\n                    android:layout_gravity=\"center\"\n                    android:divider=\"@null\"\n                    android:paddingLeft=\"2dp\"\n                    android:paddingRight=\"2dp\"\n                    android:dividerHeight=\"0dp\"></ListView>\n            </LinearLayout>\n        </LinearLayout>\n    </SlidingDrawer>\n\n    </RelativeLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/layout/activity_main.xml	(date 1535725451193)
@@ -1,36 +1,90 @@
 <?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".MainActivity">
+<android.support.v4.widget.DrawerLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        xmlns:tools="http://schemas.android.com/tools"
+        android:id="@+id/drawer_layout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:openDrawer="start">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
 
-    <android.support.v7.widget.Toolbar app:title=""
-        android:title=""
-        android:layout_height="wrap_content"
-        android:layout_width="match_parent"
-        android:id="@+id/toolbar_splash"
-        android:background="@color/colorPrimary"
-        android:minHeight="?attr/actionBarSize">
+            <android.support.v7.widget.Toolbar app:title=""
+                android:title=""
+                android:layout_height="wrap_content"
+                android:layout_width="match_parent"
+                android:id="@+id/toolbar_splash"
+                android:background="@color/colorPrimary"
+                android:minHeight="?attr/actionBarSize">
 
-        <TextView android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            android:id="@+id/toolbar_title"
-            android:layout_gravity="center"
-            android:textSize="18sp"
-            android:text=""
-            android:textStyle="bold"
-            android:textColor="@color/white"/>
-    </android.support.v7.widget.Toolbar>
+                <TextView android:layout_height="wrap_content"
+                    android:layout_width="wrap_content"
+                    android:id="@+id/toolbar_title"
+                    android:layout_gravity="center"
+                    android:textSize="18sp"
+                    android:text=""
+                    android:textStyle="bold"
+                    android:textColor="@color/white"/>
+            </android.support.v7.widget.Toolbar>
 
+
+
+            <FrameLayout
+                android:id="@+id/main_container"
+                android:layout_width="fill_parent"
+                android:layout_height="0dp"
+                android:layout_weight="1"
+                android:background="@color/white" />
+
+
+        </LinearLayout>
+
+       <!-- <android.support.v7.widget.Toolbar app:title=""
+            android:title=""
+            android:layout_height="wrap_content"
+            android:layout_width="wrap_content"
+            android:id="@+id/toolbar_splash"
+            android:background="@color/colorPrimary"
+            android:minHeight="?attr/actionBarSize">
+
+            <TextView android:layout_height="wrap_content"
+                android:layout_width="wrap_content"
+                android:id="@+id/toolbar_title"
+                android:layout_gravity="center"
+                android:textSize="18sp"
+                android:text=""
+                android:textStyle="bold"
+                android:textColor="@color/white"/>
+        </android.support.v7.widget.Toolbar>-->
+
+        <android.support.design.widget.NavigationView
+            android:id="@+id/nav_view"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:layout_gravity="start"
+            android:fitsSystemWindows="false">
+
+        <include
+            android:id="@+id/items"
+            layout="@layout/drawer_items" />
+        </android.support.design.widget.NavigationView>
+    </android.support.v4.widget.DrawerLayout>
+
+
+<!--
     <FrameLayout
         android:id="@+id/main_container"
-        android:layout_below="@+id/toolbar_splash"
+        android:layout_below="@+id/drawer_layout"
         android:layout_width="match_parent"
         android:layout_height="match_parent">
-    </FrameLayout>
-    <SlidingDrawer
+    </FrameLayout>-->
+
+   <!-- <SlidingDrawer
         android:id="@+id/simpleSlidingDrawer"
         android:layout_width="100dp"
         android:layout_height="wrap_content"
@@ -40,7 +94,7 @@
         android:orientation="horizontal"
         android:rotation="180">
 
-        <!-- Button for the handle of SlidingDrawer -->
+        &lt;!&ndash; Button for the handle of SlidingDrawer &ndash;&gt;
         <Button
             android:id="@id/handle"
             android:layout_width="35dp"
@@ -49,7 +103,7 @@
             android:background="@drawable/side_tray_update"
             android:rotation="180"
             android:textColor="#fff"/>
-        <!-- layout for the content of the SLidingDrawer -->
+        &lt;!&ndash; layout for the content of the SLidingDrawer &ndash;&gt;
         <LinearLayout
             android:id="@id/content"
             android:layout_width="wrap_content"
@@ -67,7 +121,7 @@
                 android:gravity="center"
                 android:background="@drawable/border_tray_layout">
 
-                <!-- DEFINE ALL YOUR CONTENT,WIDGETS HERE WHICH YOU WANT TO ADD IN SLIDING DRAWER LAYOUT. -->
+                &lt;!&ndash; DEFINE ALL YOUR CONTENT,WIDGETS HERE WHICH YOU WANT TO ADD IN SLIDING DRAWER LAYOUT. &ndash;&gt;
                 <ListView
                     android:id="@+id/tray_list_menu"
                     android:layout_width="wrap_content"
@@ -81,6 +135,6 @@
                     android:dividerHeight="0dp"></ListView>
             </LinearLayout>
         </LinearLayout>
-    </SlidingDrawer>
+    </SlidingDrawer>-->
 
-    </RelativeLayout>
+
Index: app/src/main/res/layout/nav_header_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/nav_header_main.xml	(date 1535702197939)
+++ app/src/main/res/layout/nav_header_main.xml	(date 1535702197939)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/nav_header"
+    android:layout_width="match_parent"
+    android:layout_height="160dp"
+    android:background="@color/colorPrimary"
+    android:clickable="true"
+    android:focusable="true"
+    android:foreground="?attr/selectableItemBackgroundBorderless"
+    android:gravity="bottom"
+    android:orientation="vertical"
+    android:padding="16dp"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
+
+    <ImageView
+        android:id="@+id/nav_header_imageView"
+        android:layout_width="64dp"
+        android:layout_height="64dp"
+        android:layout_gravity="center"
+        android:src="@drawable/disha_patani_new" />
+
+    <TextView
+        android:id="@+id/nav_header_textView"
+        android:layout_width="match_parent"
+        android:layout_gravity="center"
+        android:gravity="center"
+        android:layout_height="wrap_content"
+        android:paddingTop="20dp"
+        android:text="Disha Patani"
+        android:textStyle="bold"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/restropective_list_adapter_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"2dp\"\n    android:orientation=\"vertical\">\n    <android.support.v7.widget.CardView\n        xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/card_view\"\n        android:layout_gravity=\"center\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"280dp\"\n        card_view:cardCornerRadius=\"6dp\">\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n    <ImageView\n        android:id=\"@+id/image_wallpaper\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"280dp\"\n        android:padding=\"0dp\"\n        android:contentDescription=\"@string/app_name\"\n        android:scaleType=\"fitXY\"/>\n        <ImageView\n            android:id=\"@+id/image_save\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"5dp\"\n            android:layout_margin=\"5dp\"\n            android:layout_gravity=\"bottom|right\"\n            android:contentDescription=\"@string/app_name\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/ic_heart_save\"/>\n\n\n    </FrameLayout>\n    </android.support.v7.widget.CardView>\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/restropective_list_adapter_view.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/layout/restropective_list_adapter_view.xml	(date 1535724534443)
@@ -23,7 +23,7 @@
         android:padding="0dp"
         android:contentDescription="@string/app_name"
         android:scaleType="fitXY"/>
-        <ImageView
+     <!--   <ImageView
             android:id="@+id/image_save"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -32,7 +32,7 @@
             android:layout_gravity="bottom|right"
             android:contentDescription="@string/app_name"
             android:scaleType="fitXY"
-            android:src="@drawable/ic_heart_save"/>
+            android:src="@drawable/ic_heart_save"/>-->
 
 
     </FrameLayout>
Index: app/src/main/res/layout/tray_list_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n\n <!--   <android.support.v7.widget.CardView\n        android:layout_width=\"20dp\"\n        android:layout_height=\"20dp\"\n        android:elevation=\"2dp\"\n        android:id=\"@+id/img_card_view\"\n        android:paddingLeft=\"2dp\"\n        app:cardCornerRadius=\"10dp\"\n        android:layout_gravity=\"right\"\n        android:innerRadius=\"0dp\"\n        android:shape=\"ring\"\n        android:thicknessRatio=\"1\">-->\n\n\n        <ImageView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/drawr_list_icon\"\n            android:padding=\"2dp\"\n            android:layout_margin=\"10dp\"\n            android:paddingLeft=\"10dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_gravity=\"center\"\n            android:src=\"@mipmap/ic_fb\"/>\n\n\n</android.support.constraint.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/tray_list_item.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/layout/tray_list_item.xml	(date 1535702998293)
@@ -18,8 +18,38 @@
         android:shape="ring"
         android:thicknessRatio="1">-->
 
+     <LinearLayout
+     android:id="@+id/dashboard_ly"
+     android:layout_width="match_parent"
+     android:layout_height="wrap_content"
+     android:orientation="horizontal"
+     android:paddingBottom="10dp"
+     android:paddingRight="10dp"
+     android:paddingTop="10dp">
 
-        <ImageView
+     <ImageView
+         android:id="@+id/img_menu"
+         android:layout_width="wrap_content"
+         android:layout_height="wrap_content"
+         android:layout_gravity="center"
+         android:layout_marginLeft="7dp"
+         app:srcCompat="@drawable/ic_heart_save" />
+
+
+     <TextView
+         android:id="@+id/tv_menu"
+         android:layout_width="wrap_content"
+         android:layout_height="wrap_content"
+         android:layout_gravity="center"
+         android:layout_marginLeft="7dp"
+         android:padding="5dp"
+         android:text="Dashboard"
+         android:textColor="@color/black"
+         android:textSize="16sp" />
+
+ </LinearLayout>
+
+   <!--     <ImageView
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:id="@+id/drawr_list_icon"
@@ -29,7 +59,7 @@
             android:layout_marginBottom="10dp"
             android:layout_marginTop="10dp"
             android:layout_gravity="center"
-            android:src="@mipmap/ic_fb"/>
+            android:src="@mipmap/ic_fb"/>-->
 
 
 </android.support.constraint.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"colorPrimary\">#FF1744</color>\n    <color name=\"colorPrimaryDark\">#e5143d</color>\n    <color name=\"colorAccent\">#FF4081</color>\n    <color name=\"white\">#FFF</color>\n    <color name=\"black\">#000000</color>\n    <color name=\"gray\">#787878</color>\n    <color name=\"lighter_gray\">#939393</color>\n    <color name=\"login\">#61c6b5</color>\n    <color name=\"forgot_pasword\">#3882a7</color>\n    <color name=\"trasparent_black\">#B03c4456</color>\n    <color name=\"screen_trasparent_black\">#B3333A49</color>\n    <color name=\"listitem\">#B0333a49</color>\n    <color name=\"favourite\">#ffde00</color>\n    <color name=\"black_transparent\">#1A000000</color>\n    <color name=\"login_bt_pressd\">#b061c6b5</color>\n    <color name=\"sky_blue\">#61c6b5</color>\n    <color name=\"blue\">#4682B4</color>\n    <color name=\"green\">#5b9181</color>\n    <color name=\"text_color_intake\"> #61C6B5</color>\n    <color name=\"transparent\">#80000000</color>\n\n    <!--90% transparency-->\n    <color name=\"transparent_back\">#14400000</color>\n    <color name=\"tray_background\">#809FB5E4</color>\n    <color name=\"lp_transparent\">#66000000</color>\n    <color name=\"splash_background\">#474747</color>\n    <color name=\"my_list_img\">#fbaa27</color>\n    <color name=\"sent_msg_circle\">#61bc6d</color>\n    <color name=\"text_color_green\">#47c9bd</color>\n\n    <!--Edit Profile-->\n    <color name=\"transparent_black_drop_down\">#8C3c4456</color>\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/values/colors.xml	(date 1535702503215)
@@ -20,7 +20,8 @@
     <color name="green">#5b9181</color>
     <color name="text_color_intake"> #61C6B5</color>
     <color name="transparent">#80000000</color>
-
+    <color name="grey">#e7e5e5</color>
+    <color name="gray_dark">#a9a5a5</color>
     <!--90% transparency-->
     <color name="transparent_back">#14400000</color>
     <color name="tray_background">#809FB5E4</color>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">FeedApp</string>\n    <string name=\"wallpaper\">Wallpaper</string>\n    <string name=\"network_error\">Network Error</string>\n    <string name=\"ok\">Ok</string>\n    <string name=\"whoops\">Whoops</string>\n    <string name=\"server_error\">Server Error</string>\n    <string name=\"wallapaper_json_url\">https://raw.githubusercontent.com/uidhinc/DishaPatani/master/wallpapers.json</string>\n\n\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/values/strings.xml	(date 1535708544222)
@@ -5,6 +5,15 @@
     <string name="ok">Ok</string>
     <string name="whoops">Whoops</string>
     <string name="server_error">Server Error</string>
+    <string name="navigation_drawer_open">Open navigation drawer</string>
+    <string name="navigation_drawer_close">Close navigation drawer</string>
+    <string name="android_dev_name">iSys Developer</string>
+    <string name="send_to">Share App via</string>
+    <string name="android_dev_designation">Android Application Developer</string>
+    <string name="about_us_dev">I worked my way from building simple calculator applications to now building industry level Android applications. Here are some of the things I recommend any ameatur Android developer to learn</string>
+
+
+
     <string name="wallapaper_json_url">https://raw.githubusercontent.com/uidhinc/DishaPatani/master/wallpapers.json</string>
 
 
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n\n    <!-- Base application theme. -->\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n        <!-- Customize your theme here. -->\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n        <item name=\"colorAccent\">@color/colorAccent</item>\n    </style>\n\n    <style name=\"AppThemeCustom\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n        <item name=\"windowActionBar\">false</item>\n        <item name=\"windowActionBarOverlay\">false</item>\n        <item name=\"windowNoTitle\">true</item>\n    </style>\n\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/res/values/styles.xml	(date 1535725063462)
@@ -14,4 +14,6 @@
         <item name="windowNoTitle">true</item>
     </style>
 
+
+
 </resources>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.isysnext.feedapp\">\n\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".IntroActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".MainActivity\" />\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ app/src/main/AndroidManifest.xml	(date 1535725063399)
@@ -20,7 +20,9 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name=".MainActivity" />
+        <activity android:name=".MainActivity"
+            android:theme="@style/AppThemeCustom"
+            android:screenOrientation="portrait" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 6b1f250913cb3cfe5f4f8a2e233b52052956fa5c)
+++ .idea/misc.xml	(date 1535704003789)
@@ -1,5 +1,30 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="5">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
+          <item index="3" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="4" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1535646913944)
+++ .idea/vcs.xml	(date 1535646913944)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
